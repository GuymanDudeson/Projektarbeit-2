[gd_scene load_steps=6 format=3 uid="uid://bpl7dhl6tixls"]

[ext_resource type="Shader" path="res://shaders/circle.gdshader" id="1_mcy8g"]

[sub_resource type="GDScript" id="GDScript_eyerr"]
script/source = "class_name Water_Drop
extends CharacterBody2D

const my_scene: PackedScene = preload(\"res://scenes/water_drop.tscn\");

@export var starting_position: Vector2;

var sprite: Sprite2D;	

func _on_draw() -> void:
	
		
	
#region PhysicsProcessing

func _physics_process(delta: float) -> void:
	if(!Global.simulate_physics): return;
	var instanceId = self.get_instance_id();

	if Global.pressures.has(instanceId) and Global.densities.has(instanceId):
		var pressure_acceleration = Global.pressures[instanceId] / Global.densities[instanceId];
		velocity = pressure_acceleration * delta;
	
	velocity += Vector2.DOWN * Global.gravity * delta;
	position += velocity * delta;
	
	resolve_collision();
	queue_redraw()
	
	#timer_accumulator += delta
	#if(timer_accumulator >= 1.0):
		#if(Global.densities.has(self.get_instance_id())):
			#sprite.material.set_shader_parameter(\"color\", Global.densities[self.get_instance_id()]);
		#timer_accumulator = 0.0;


		
#endregion
"

[sub_resource type="CircleShape2D" id="CircleShape2D_f85wu"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6mglu"]
shader = ExtResource("1_mcy8g")
shader_parameter/color = Vector4(0.2, 0.5, 0.9, 1)

[sub_resource type="CanvasTexture" id="CanvasTexture_ubqwi"]

[node name="WaterDrop" type="CharacterBody2D"]
script = SubResource("GDScript_eyerr")
starting_position = null

[node name="WaterBounds" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_f85wu")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_6mglu")
texture = SubResource("CanvasTexture_ubqwi")

[connection signal="draw" from="." to="." method="_on_draw"]
[connection signal="ready" from="." to="." method="_on_ready"]
[connection signal="ready" from="Sprite2D" to="." method="_on_sprite_2d_ready"]
